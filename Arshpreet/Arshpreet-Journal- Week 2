ARSHPREET S BHATTI
010819796
Journal Entry Week- 2
This week, we were very busy with the lab assignment. We learned two new software platforms: BlueJ and Astah UML. The code template for a Gumball Machine that accepts quarters only and with the price of the gumball as 25 cents was provided by the professor. We were assigned to edit the code, so as to accommodate a few new features like the machine accepting dimes and nickels also instead of quarters only. I created a new interface and two new classes to accommodate the new features and modified the old classes to be compatible with the new classes and interface. Also, we had to add 5 test cases to the project so that they may be tested against our new code with the new features. I added five test cases of my own to test the units individually. 
We were also assigned to make state diagrams of the above mentioned project. Two diagrams had to be made: one before adding the new features and one after. These were the diagrams to be made for the Java code provided. There was another diagram to be made from the code provided for C. All of these diagrams were to be made in Astah UML. I made all of these diagrams in Astah UML. 

Our team: Empty Coffee Cups, had a team meeting set up during the week to discuss the project workflow for future weeks. It was decided at the team meeting that all the team members will come up with their own implementation of a specific part of the project and commit it to the Team Git account. I chose sorting as the part of the project that I was going to work on. I committed my implementation methodology for the game to the team Git account. 

For the team project, we decided to research on various sorting algorithms and I did the following work:
Sorting Algorithm: Bubble sort
I chose bubble sort for my research of sorting algorithms this week because Bubble sort is a simple sorting algorithm. It can be a like a starting base for people new to the Computer Science world. Since our model of teaching the algorithms was also going to be in an incremental one (based on increasing complexity), I chose to research on one of the most easiest ones. 
This algorithm is not suitable for large data sets. The reason for that is that its average and worst case complexity are of the Order (n2):where n is the number of items. Bubble sort algorithm is comparison based algorithm. Each pair of adjacent elements in a data set is compared and elements are swapped if they are not in order. 
The translation of the same thing in code would be like assuming  that the list is an array of n elements. Then, we use the swap function. The values are swapped (of given array elements). And this is how it proceeds to get the list of elements sorted. We could have huge signs with numbers written on them and we could explain the bubble sort algorithm to our test group of people. They would then perform the actual sort with people holding those signs. Another idea I have is to replace the signs with actual objects with their weights written on them. The third idea is to replace the signs with images of objects and animals or anything that can be easily distinguished from the other items on the list, according to their weights. The people in the test group would then perform the sort on those items.

ARSHPREET S BHATTI
010819796
Journal Entry Week- 2
This week, we were very busy with the lab assignment. We learned two new software platforms: BlueJ and Astah UML. The code template for a Gumball Machine that accepts quarters only and with the price of the gumball as 25 cents was provided by the professor. We were assigned to edit the code, so as to accommodate a few new features like the machine accepting dimes and nickels also instead of quarters only. I created a new interface and two new classes to accommodate the new features and modified the old classes to be compatible with the new classes and interface. Also, we had to add 5 test cases to the project so that they may be tested against our new code with the new features. I added five test cases of my own to test the units individually. 
We were also assigned to make state diagrams of the above mentioned project. Two diagrams had to be made: one before adding the new features and one after. These were the diagrams to be made for the Java code provided. There was another diagram to be made from the code provided for C. All of these diagrams were to be made in Astah UML. I made all of these diagrams in Astah UML. 

Our team: Empty Coffee Cups, had a team meeting set up during the week to discuss the project workflow for future weeks. It was decided at the team meeting that all the team members will come up with their own implementation of a specific part of the project and commit it to the Team Git account. I chose sorting as the part of the project that I was going to work on. I committed my implementation methodology for the game to the team Git account. 

For the team project, we decided to research on various sorting algorithms and I did the following work:
Sorting Algorithm: Bubble sort
I chose bubble sort for my research of sorting algorithms this week because Bubble sort is a simple sorting algorithm. It can be a like a starting base for people new to the Computer Science world. Since our model of teaching the algorithms was also going to be in an incremental one (based on increasing complexity), I chose to research on one of the most easiest ones. 
This algorithm is not suitable for large data sets. The reason for that is that its average and worst case complexity are of the Order (n2):where n is the number of items. Bubble sort algorithm is comparison based algorithm. Each pair of adjacent elements in a data set is compared and elements are swapped if they are not in order. 
The translation of the same thing in code would be like assuming  that the list is an array of n elements. Then, we use the swap function. The values are swapped (of given array elements). And this is how it proceeds to get the list of elements sorted. We could have huge signs with numbers written on them and we could explain the bubble sort algorithm to our test group of people. They would then perform the actual sort with people holding those signs. Another idea I have is to replace the signs with actual objects with their weights written on them. The third idea is to replace the signs with images of objects and animals or anything that can be easily distinguished from the other items on the list, according to their weights. The people in the test group would then perform the sort on those items.
